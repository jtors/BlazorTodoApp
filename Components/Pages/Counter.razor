@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<p role="status">Current count: @(currentCount)</p>

@if (currentCount > 3)
{
    <p>You Win @currentCount</p>
}
else
{
    <p>Waiting for it @currentCount</p>
}

<h3>Names</h3>
<ul>
    @foreach (var name in Names)
    {
        <li>@name</li>
    }
</ul>

<button class="btn btn-primary" @onclick="IncrementCount">Increment Count</button>
<button class="btn btn-primary" @onclick="ChangeValueOfProps">Change Value of Props</button>

<h3>Basket</h3>
@if (Basket.Count > 0)
{
    <ul class="grid-4">
    @foreach (var item in Basket.Select((value, index) => new { index, value }))
        {
            <li class="flex-elem">
                <span>@item.value</span>
                <button class="btn btn-primary" @onclick="() => EditItem(item.index)">Edit</button>
                <button class="btn btn-primary" @onclick="() => RemoveItem(item.index)">Delete</button>
            </li>
        }
    </ul>
}
else
{
    <p>No Items on Basket</p>
}

<div class="flex-elem mt-1">
    <div class="flex-elem -col">
        <span>@basketItem</span>
        <input @bind="basketItem" />
    </div>

    @if (isUpdating == true)
    {
        <button class="btn btn-primary" @onclick="UpdateItem">Update Item to Basket</button>
    }
    else
    {

        <button class="btn btn-primary" @onclick="AddItem">Add Item to Basket</button>
    }
</div>

@code {
    [Parameter]
    public int IncrementAmount { get; set; } = 1;

    [Parameter]
    public string[] Names { get; set; } = { };

    [Parameter]
    public List<string> Basket { get; set; }

    private int currentCount = 0;
    private string basketItem = "";
    private bool isUpdating = false;
    private int editingIndex = -1;

    private void IncrementCount()
    {
        currentCount += IncrementAmount;
    }

    private void ChangeValueOfProps()
    {
        Names[0] = "Ander";
        Names[1] = "Voila";
        Names[2] = "SwassnivoK";
    }

    private void AddItem()
    {
        Basket.Add(basketItem);
    }

    private void RemoveItem(int index)
    {
        Basket.RemoveAt(index);
    }

    private void EditItem(int index)
    {
        isUpdating = true;
        editingIndex = index;

        var editItem = Basket.ElementAt(index);
        basketItem = editItem;
    }

    private void UpdateItem()
    {
        Basket[editingIndex] = basketItem;

        isUpdating = false;
        basketItem = "";
        editingIndex = -1;
    }

}
